<?php
/**
 * Implements hook_menu().
 */
function jonrelate_menu() {

  $items['cytoscape'] = array(
    'title' => 'Cytoscape',
    'page callback' => 'cytoscape_page',
    'access arguments' => array('access content'), //access callback defaults to user_access. Google hook_menu
    'type' => MENU_CALLBACK,
  );  
  $items['search-ncbi'] = array(
    'title' => 'Ajax Search NCBI Request',
    'page callback' => 'search_ncbi_callback',
    'access arguments' => array('access content'), //access callback defaults to user_access. Google hook_menu
    'type' => MENU_CALLBACK,
  );  

  return $items;
}
function cytoscape_page(){
  $output = <<<EOD
<div id="cytoscapeweb">
  Cytoscape Web will replace the contents of this div with your graph.
</div>
<script type="text/javascript">
    window.onload=function() {
        // id of Cytoscape Web container div
        var div_id = "cytoscapeweb";
        
        // you could also use other formats (e.g. GraphML) or grab the network data via AJAX
        var networ_json = {
            data: {
                nodes: [ { id: "1" }, { id: "2" } ],
                edges: [ { id: "2to1", target: "1", source: "2" } ]
            }
        };
        
        // initialization options
        var options = {
            // where you have the Cytoscape Web SWF
            swfPath: "/sites/all/themes/subboot/cytoscape/swf/CytoscapeWeb",
            // where you have the Flash installer SWF
            flashInstallerPath: "/sites/all/themes/subboot/cytoscape/swf/playerProductInstall"
        };
        
        // init and draw
        var vis = new org.cytoscapeweb.Visualization(div_id, options);
        vis.draw({ network: networ_json });
    };
</script>
EOD;
  return $output;

}
function search_ncbi_callback() {
  $deletethis =32;
  //When a page is viewed, a string is sent here with publisher uid followed by _, followed by all the nids of the nowads separated by -.
  if(!empty($_GET['search-ncbi-string']) && !empty($_GET['database'])){
    $db = filter_xss($_GET['database'], '');
    $term = filter_xss(trim($_GET['search-ncbi-string']), '');
    $term = preg_replace('/(\s)+/', ' ', $term);
    $term = preg_replace('/ +/', '+', $term);
    //using DOM/XPath to grab the tweets straight from their page
    $dom = new DOMDocument;
    $html = file_get_contents("http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=$db&term=$term&relevanceorder=on");
    @$dom->loadHTML($html);
    $xpath = new DOMXPath($dom);
    $ids = $xpath->query("//id");
    foreach($ids as $id){
      $id_string = $id->nodeValue;
      $dom2 = new DOMDocument;
      $html2 = file_get_contents("http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=$db&id=$id_string");
      @$dom2->loadHTML($html2);
      $xpath2 = new DOMXPath($dom2);
      switch ($db) {
        case 'homologene':
            $symbol = $xpath2->query("//item[@name='Symbol'][1]")->item(0)->nodeValue;
            $name = ': '.$xpath2->query("//item[@name='Title'][1]")->item(0)->nodeValue;
            break;
        case 'pcsubstance':
            $symbol = $xpath2->query("//item[@name='SynonymList']/item[@name='string'][1]")->item(0)->nodeValue;
            $name = ' (CID = '.$xpath2->query("//item[@name='CompoundIDList']/item[@name='int'][1]")->item(0)->nodeValue.')';
            break;
        case 'protein':
        case 'nuccore':
            $symbol = $xpath2->query("//item[@name='Caption'][1]")->item(0)->nodeValue;
            $name = ': '.$xpath2->query("//item[@name='Title'][1]")->item(0)->nodeValue;
            break;
        case 'gene':
            $symbol = $xpath2->query("//item[@name='Name'][1]")->item(0)->nodeValue;
            $name = ': '.$xpath2->query("//item[@name='Description'][1]")->item(0)->nodeValue;
            break;
      }
      $results[] = array("id" => $symbol, "name" => $name);
    }
    echo json_encode($results);
    
    //$response = drupal_http_request("http://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi?db=homologene&term=$term");
    //$response_array = json_decode($response, TRUE);
    //echo $response;
    //echo $_GET['search-homologene-string'];
  }
  /*if(empty($results)){
    $results[] = array("id" =>'Sorry', "name" =>'');
  }*/
  
}


